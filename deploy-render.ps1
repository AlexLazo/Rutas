# üöÄ Script de Deployment para Render.com
# Sistema de Gesti√≥n de Rutas - AB InBev

Write-Host "üöÄ Preparando deployment para Render.com" -ForegroundColor Green
Write-Host "===========================================" -ForegroundColor Green

# Funci√≥n para verificar Git
function Test-Git {
    Write-Host "`nüìã Verificando Git..." -ForegroundColor Yellow
    
    try {
        $gitVersion = git --version 2>&1
        Write-Host "‚úÖ Git encontrado: $gitVersion" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå Git no encontrado. Por favor instala Git desde https://git-scm.com/" -ForegroundColor Red
        return $false
    }
}

# Funci√≥n para verificar archivos del proyecto
function Test-RenderFiles {
    Write-Host "`nüìÅ Verificando archivos para Render..." -ForegroundColor Yellow
    
    $requiredFiles = @(
        "app.py",
        "requirements.txt",
        "templates/base.html",
        "templates/index.html",
        "templates/admin.html",
        "templates/login.html",
        "render.yaml"
    )
    
    $missing = @()
    foreach ($file in $requiredFiles) {
        if (-not (Test-Path $file)) {
            $missing += $file
        } else {
            Write-Host "‚úÖ $file" -ForegroundColor Green
        }
    }
    
    if ($missing.Count -gt 0) {
        Write-Host "‚ùå Archivos faltantes:" -ForegroundColor Red
        foreach ($file in $missing) {
            Write-Host "   - $file" -ForegroundColor Red
        }
        return $false
    }
    
    return $true
}

# Funci√≥n para inicializar Git si no existe
function Initialize-Git {
    Write-Host "`nüîß Configurando Git..." -ForegroundColor Yellow
    
    if (-not (Test-Path ".git")) {
        Write-Host "üì¶ Inicializando repositorio Git..." -ForegroundColor Cyan
        git init
        git branch -M main
    } else {
        Write-Host "‚úÖ Repositorio Git ya existe" -ForegroundColor Green
    }
    
    # Verificar .gitignore
    if (-not (Test-Path ".gitignore")) {
        Write-Host "üìù Creando .gitignore..." -ForegroundColor Cyan
        @"
# Python
__pycache__/
*.pyc
*.pyo
*.db
*.sqlite3

# Flask
instance/
.webassets-cache

# Environment
.env
.venv
venv/

# IDE
.vscode/
.idea/

# OS
.DS_Store
Thumbs.db

# Logs
*.log
"@ | Out-File -FilePath ".gitignore" -Encoding UTF8
    }
    
    return $true
}

# Funci√≥n para preparar commit
function Prepare-Commit {
    Write-Host "`nüìù Preparando archivos para commit..." -ForegroundColor Yellow
    
    git add .
    
    $status = git status --porcelain
    if ($status) {
        Write-Host "üìã Archivos a subir:" -ForegroundColor Cyan
        git status --short
        
        $message = "Sistema de Rutas - Deployment para Render.com"
        git commit -m $message
        Write-Host "‚úÖ Commit creado: $message" -ForegroundColor Green
        return $true
    } else {
        Write-Host "‚úÖ No hay cambios para hacer commit" -ForegroundColor Green
        return $true
    }
}

# Funci√≥n para mostrar instrucciones de GitHub
function Show-GitHubInstructions {
    Write-Host "`nüåê PASOS PARA SUBIR A GITHUB:" -ForegroundColor Green
    Write-Host "==============================" -ForegroundColor Green
    Write-Host ""
    Write-Host "1. üì± Ve a github.com y crea una cuenta (si no tienes)" -ForegroundColor Yellow
    Write-Host "2. ‚ûï Crea un nuevo repositorio:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Nombre: sistema-rutas-abinbev" -ForegroundColor White
    Write-Host "   ‚Ä¢ Descripci√≥n: Sistema de Gesti√≥n de Rutas para AB InBev" -ForegroundColor White
    Write-Host "   ‚Ä¢ P√∫blico o Privado (tu elecci√≥n)" -ForegroundColor White
    Write-Host "   ‚Ä¢ NO marques README, .gitignore, license (ya los tienes)" -ForegroundColor White
    Write-Host ""
    Write-Host "3. üîó Despu√©s de crear el repo, ejecuta estos comandos aqu√≠:" -ForegroundColor Yellow
    Write-Host "   git remote add origin https://github.com/TU-USUARIO/sistema-rutas-abinbev.git" -ForegroundColor Cyan
    Write-Host "   git push -u origin main" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "4. üöÄ Una vez en GitHub, ve a render.com para el deployment" -ForegroundColor Yellow
    Write-Host ""
}

# Funci√≥n para mostrar instrucciones de Render
function Show-RenderInstructions {
    Write-Host "`nüöÄ PASOS PARA DEPLOYMENT EN RENDER.COM:" -ForegroundColor Green
    Write-Host "=======================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "1. üåê Ve a render.com" -ForegroundColor Yellow
    Write-Host "2. üìß Crea cuenta (usa tu email corporativo si es posible)" -ForegroundColor Yellow
    Write-Host "3. üîó Conecta tu cuenta de GitHub" -ForegroundColor Yellow
    Write-Host "4. ‚ûï Clic en 'New +' ‚Üí 'Web Service'" -ForegroundColor Yellow
    Write-Host "5. üì¶ Selecciona tu repositorio: sistema-rutas-abinbev" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "6. ‚öôÔ∏è Configuraci√≥n del servicio:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Name: sistema-rutas-abinbev" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Region: Oregon (US West) - mejor para LATAM" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Branch: main" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Runtime: Python 3" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Build Command: pip install -r requirements.txt" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Start Command: python app.py" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "7. üîß Variables de entorno (Environment Variables):" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ FLASK_ENV = production" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ TZ = America/Guatemala" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "8. üí∞ Plan: Free (0$/mes)" -ForegroundColor Yellow
    Write-Host "9. üöÄ Clic en 'Create Web Service'" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "‚è±Ô∏è El deployment toma 2-5 minutos..." -ForegroundColor Green
    Write-Host ""
}

# Funci√≥n para mostrar informaci√≥n post-deployment
function Show-PostDeployment {
    Write-Host "`n‚úÖ DESPU√âS DEL DEPLOYMENT:" -ForegroundColor Green
    Write-Host "=========================" -ForegroundColor Green
    Write-Host ""
    Write-Host "üåê Tu aplicaci√≥n estar√° en:" -ForegroundColor Yellow
    Write-Host "   https://sistema-rutas-abinbev-XXXX.onrender.com" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üë§ Usuarios por defecto:" -ForegroundColor Yellow
    Write-Host "   Admin: admin / admin123" -ForegroundColor Cyan
    Write-Host "   Supervisor: supervisor / supervisor123" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "üì± Pruebas recomendadas:" -ForegroundColor Yellow
    Write-Host "   ‚úÖ Acceso desde PC corporativo" -ForegroundColor White
    Write-Host "   ‚úÖ Acceso desde tel√©fono corporativo" -ForegroundColor White
    Write-Host "   ‚úÖ Formulario de reportes" -ForegroundColor White
    Write-Host "   ‚úÖ Login de administrador" -ForegroundColor White
    Write-Host "   ‚úÖ Dashboard y filtros" -ForegroundColor White
    Write-Host "   ‚úÖ Exportar a Excel" -ForegroundColor White
    Write-Host ""
    Write-Host "üîÑ Auto-deploy:" -ForegroundColor Yellow
    Write-Host "   Cada vez que hagas 'git push', Render actualiza autom√°ticamente" -ForegroundColor White
    Write-Host ""
}

# Funci√≥n principal
function Main {
    $currentDir = Get-Location
    Write-Host "üìÅ Directorio: $currentDir" -ForegroundColor Cyan
    
    # Verificar Git
    if (-not (Test-Git)) {
        Write-Host "`n‚ùå Error: Git requerido. Abortando." -ForegroundColor Red
        return
    }
    
    # Verificar archivos del proyecto
    if (-not (Test-RenderFiles)) {
        Write-Host "`n‚ùå Error: Archivos del proyecto faltantes. Abortando." -ForegroundColor Red
        return
    }
    
    # Inicializar Git
    if (-not (Initialize-Git)) {
        Write-Host "`n‚ùå Error configurando Git. Abortando." -ForegroundColor Red
        return
    }
    
    # Preparar commit
    if (-not (Prepare-Commit)) {
        Write-Host "`n‚ùå Error preparando commit. Abortando." -ForegroundColor Red
        return
    }
    
    Write-Host "`n‚úÖ ¬°Proyecto listo para Render.com!" -ForegroundColor Green
    
    # Mostrar instrucciones
    Show-GitHubInstructions
    Show-RenderInstructions
    Show-PostDeployment
    
    Write-Host "`nüéØ SIGUIENTE PASO:" -ForegroundColor Green
    Write-Host "Sube tu c√≥digo a GitHub y luego configura en Render.com" -ForegroundColor Yellow
    Write-Host ""
    
    # Preguntar si quiere abrir los sitios web
    $response = Read-Host "¬øDeseas abrir GitHub y Render.com en el navegador? (s/n)"
    if ($response -eq 's' -or $response -eq 'S') {
        Start-Process "https://github.com/new"
        Start-Sleep -Seconds 2
        Start-Process "https://render.com"
        Write-Host "üåê Sitios web abiertos en el navegador" -ForegroundColor Green
    }
}

# Ejecutar funci√≥n principal
Main
